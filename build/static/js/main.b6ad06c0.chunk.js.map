{"version":3,"sources":["Nav/reducer.js","Home/reducer.js","rootReducer.js","env.js","firebase.js","Nav/AuthButton.js","Nav/LoginStatus.js","Schema/UserSchema.js","helpers.js","Nav/index.js","Nav/actions.js","Home/SearchUsers.js","Home/RequestCard.js","Home/RequestList.js","Home/Dashboard.js","Schema/TransactionSchema.js","Home/TransactionView.js","Home/actions.js","Home/PublicProfile.js","Home/index.js","Welcome/index.js","Contacts/ContactTile.js","Contacts/index.js","index.js"],"names":["NavbarReducer","state","action","type","authenticated","userName","email","undefined","HomeReducer","logPayment","prevState","combineReducers","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebase","firebaseDB","googleAuth","GoogleAuthProvider","AuthButton","props","status","className","onClick","signOut","signIn","LoginStatus","to","UserSchema","balance","pendingNotification","preferences","correctEmail","name","split","replace","toLowerCase","verifyUser","a","ref","once","Navbar","handleStatus","user","auth","currentUser","loc","then","snapshot","exists","userObj","displayName","key","hasOwnProperty","set","initializeUser","SignedIn","SignedOut","signInWithPopup","onAuthStateChanged","this","React","Component","connect","dispatch","SignedInAction","SearchUsers","handleInput","e","setState","target","value","length","val","placeholder","onChange","CardHeader","obj","senderName","requestSender","receiverName","requestReceiver","amount","desc","handleRequest","msg","RequestCard","data","userKey","RequestsList","handleClick","mode","id","title","innerText","requestsReceived","requestsSent","orderByChild","equalTo","on","snap","arr","forEach","item","push","pState","off","map","i","Dashboard","TransactionSchema","from","payload","TransactionView","handleChange","event","preventDefault","prop","isNaN","Number","handleTransaction","paymentType","transaction","requestReciever","transact","TransactionRequest","for","PublicProfile","foreignUser","testUser","ToggleLog","Home","match","params","ContactTile","Contacts","contacted","userKeys","userNames","idx","store","createStore","reducer","ReactDOM","render","Nav","path","component","Welcome","exact","document","getElementById"],"mappings":"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","file":"static/js/main.b6ad06c0.chunk.js","sourcesContent":["const NavbarReducer = (state = {} , action) => {\n\n  switch(action.type) {\n    case 'Signed_In':\n      // firebaseDB.ref(`users/${correctEmail(action.email)}/pendingNotification`).on(\"value\",(snapshot) => {\n      //   if(snapshot.val() == True)\n      //   {\n      //     return  {...state, authenticated : true, userName : action.userName, email : action.email, pendingNotification : true}\n      //   }\n      // })\n      return  {...state, authenticated : true, userName : action.userName, email : action.email}\n\n    case 'Signed_Out':\n      return {...state, authenticated : false, userName : undefined, email : undefined};\n    default:\n      return {...state};\n      \n  }\n};\n\nexport default NavbarReducer;","\nconst HomeReducer =  (state, action) => {\n  switch(action.type) {\n    case  \"Transaction_Request\" :\n      return {...state, logPayment : false}\n    case \"Toggle_Log\":\n      let prevState = {...state}\n      return {...state, logPayment : !prevState.logPayment}\n    default :\n      return {...state} \n  }\n}\n\nexport default HomeReducer","import {combineReducers} from \"redux\";\nimport NavbarReducer from \"./Nav/reducer\";\nimport HomeReducer from \"./Home/reducer\";\n\nexport default combineReducers({\n  NavbarReducer,\n  HomeReducer\n});","const firebaseConfig = {\n    apiKey: \"AIzaSyDmfsN46iQMZ-q_LwpBLUfRcbxZxxJdxyk\",\n    authDomain: \"balance-app-1a.firebaseapp.com\",\n    databaseURL: \"https://balance-app-1a.firebaseio.com\",\n    projectId: \"balance-app-1a\",\n    storageBucket: \"balance-app-1a.appspot.com\",\n    messagingSenderId: \"628409872793\",\n    appId: \"1:628409872793:web:110dacebe39e6d2a73e308\"\n};\n\nexport default firebaseConfig;","import * as firebase from \"firebase\";\nimport firebaseConfig from \"./env\"\n\nfirebase.initializeApp(firebaseConfig);\nconst firebaseDB = firebase.database();\nconst googleAuth = new firebase.auth.GoogleAuthProvider();\n\nexport  {\n  firebase,\n  firebaseDB,\n  googleAuth\n}\n","import React from \"react\"\n\nconst AuthButton = (props) => {\n  if(props.status)\n  {\n    return <button className=\"btn btn-outline-success\" onClick={props.signOut}>Sign Out</button>\n  }\n  else\n  {\n  return <button className=\"btn btn-outline-success\" onClick={props.signIn}>Sign In</button>\n  }\n}\n\nexport default AuthButton;","import React from \"react\"\nimport {Link} from \"react-router-dom\"\n\nconst LoginStatus = (props) => {\n  if(props.status)\n      return <span className=\"navbar-text\"><Link to=\"/\"> To {props.userName}'s Dashboard </Link></span>\n  else\n      return <span className=\"navbar-text\">Login Using Your Google Account</span>\n}\n\nexport default LoginStatus;","const UserSchema = (email,userName) => {\n  return {\n    email,\n    userName,\n    balance : 0,\n    pendingNotification : false,\n    preferences : false\n  }\n};\n\nexport default UserSchema;","import { firebaseDB } from \"./firebase\";\n// this file contains some helper functions used throughout the appplication\n\n// create user in firebase if logging in for first time\nconst initializeUser = (user, UserSchema) => {\n\n  // create user's data if doesn't exist\n  let loc = `users/${correctEmail(user.email)}/`;\n  let ref = firebaseDB.ref(loc);\n  ref.once(\"value\").then( (snapshot) =>{\n    if(!snapshot.exists())\n    {\n      let userObj = UserSchema(user.email,user.displayName);\n      \n      for (var key in userObj) \n      {\n        if (userObj.hasOwnProperty(key)) \n          firebaseDB.ref(loc+key).set(userObj[key]);\n      }    \n    }\n  });\n\n}\n\n// log a transaction request\nconst transact = (transaction) => {\n  let ref = firebaseDB.ref(\"transactionRequests\")\n  ref.push(transaction); \n  ref = firebaseDB.ref(`users/${transaction.requestReciever}/pendingNotification`)\n  ref.set(true);\n}\n\n// correctify email to be used as a key\nconst correctEmail = (email) => {\n  let name = email.split(\"@\")[0];\n  name = name.replace(/\\./g,\"|\");\n  return name.toLowerCase();\n}\n\n// verify if such a user exists (return a promise)\nconst verifyUser = async (email) => {\n  let ref = firebaseDB.ref(\"users/\"+correctEmail(email) + \"/userName\")\n  return ref.once(\"value\");\n}\n\n\nexport {\n  correctEmail,\n  initializeUser,\n  verifyUser,\n  transact\n};","import React from \"react\"\nimport { firebase, googleAuth} from \"../firebase\";\nimport AuthButton from \"./AuthButton\";\nimport LoginStatus from \"./LoginStatus\";\nimport {SignedInAction, SignedOutAction} from \"./actions\";\nimport {connect} from \"react-redux\";\nimport {Link} from \"react-router-dom\";\nimport UserSchema from \"../Schema/UserSchema\";\nimport {initializeUser} from \"../helpers\";\n\n\n\nclass Navbar extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  handleStatus = () => {\n    const user = firebase.auth().currentUser;\n    \n      if(user)\n      {\n        // create user's data if doesn't exist\n        initializeUser(user, UserSchema);\n        this.props.SignedIn(user.displayName,user.email);    \n      }    \n      else\n        this.props.SignedOut();\n  }\n\n  componentDidMount()\n  {\n    firebase.auth().onAuthStateChanged((user) => {\n      this.handleStatus();\n    })\n\n    \n\n  }\n\n\n  signIn = () => {\n    firebase.auth().signInWithPopup(googleAuth);\n    this.handleStatus();\n  }\n\n  signOut = () => {\n    firebase.auth().signOut();\n    this.handleStatus();\n  }\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n        <Link to=\"/\" className=\"navbar-brand\">Balance</Link>\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <LoginStatus status={this.props.authenticated} userName={this.props.userName} />\n            </li>\n\n          </ul>\n\n          <ul className=\"navbar-nav ml-auto\">\n\n            <li className=\"nav-item\">\n              <AuthButton status={this.props.authenticated} signIn={this.signIn} signOut={this.signOut} />\n            </li>\n\n          </ul>\n      </nav>      \n    );\n  }\n  \n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authenticated : state.NavbarReducer.authenticated,\n    userName : state.NavbarReducer.userName,\n    email : state.NavbarReducer.email\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    SignedIn : (userName, email) => {\n      dispatch(SignedInAction(userName, email));\n    },\n\n    SignedOut : () => {\n      dispatch(SignedOutAction());\n    }\n\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Navbar);","const SignedInAction  = (userName, email) => {\n  return {type : \"Signed_In\", userName, email};\n}\n\nconst SignedOutAction = () => {\n  return {type : \"Signed_Out\"};\n}\n\nexport {SignedInAction, SignedOutAction};","import React from \"react\";\nimport {correctEmail, verifyUser} from \"../helpers\";\nimport {Link} from \"react-router-dom\";\n\nclass SearchUsers extends React.Component {\n  constructor(props)\n  {\n    super(props);\n    this.state = {\n      email : \"\",\n      userName : undefined\n    }\n\n  }\n\n  handleInput = (e) => {\n    this.setState({email : e.target.value}, async () => {\n      if(this.state.email.length > 1)\n      {\n        let name = await verifyUser(this.state.email);\n        if(name && name.exists())\n          this.setState({userName : name.val()})\n        else\n          this.setState({userName : undefined})\n      }\n    });\n\n  }\n\n  render() {\n    return(\n      <div>\n        <hr />\n        <h3>Find A User</h3>\n        <input className=\"form-control mx-auto w-50 \" type=\"text\" placeholder=\"@gmail.com\" value={this.state.email} onChange={this.handleInput}/>\n        <div>\n        <Link to={\"/user/\" + correctEmail(this.state.email)} className=\"btn\" > <h3>{this.state.userName}</h3> </Link>\n        </div>\n      </div>\n    );\n\n  }\n}\n\nexport default SearchUsers;","import React from \"react\"\nimport {firebaseDB} from \"../firebase\"\n\nconst CardHeader = (props) => {\n  let obj = props.obj;\n  return (\n    <div>\n      <h5>{obj.status}</h5>\n      <h5>Sender : {obj.senderName} <small>({obj.requestSender})</small></h5>\n      <h5>Receiver : {obj.receiverName} <small>({obj.requestReceiver})</small></h5>\n      <h6>Sender Wants To {obj.type === \"getPaid\" ? \"Get Paid\" : \"Pay\"}</h6>\n      <h5>Amount : {obj.amount}</h5>\n      <h6>Descrpition : {obj.desc}</h6>\n    </div>\n  )\n}\n\nconst handleRequest = (ref, msg) => {\n  if(msg === \"accept\")\n    firebaseDB.ref(`transactionRequests/${ref.key}/status`).set(\"ACCEPTED\")\n  else if(msg === \"decline\")\n    firebaseDB.ref(`transactionRequests/${ref.key}/status`).set(\"REJECTED\")\n  else\n    firebaseDB.ref(`transactionRequests/${ref.key}/status`).set(\"COMPLETED\")\n\n}\n\nconst RequestCard = (props) => {\n  let obj = props.data.val();\n\n\n  if(props.type === \"REJECTED\")\n  {\n    if(obj.status === \"REJECTED\")\n    {\n      return (\n      <div className=\"card\">\n        <CardHeader obj={obj}/>\n      </div>\n      );\n    }\n  }\n\n\n  if(props.type === \"ACCEPTED\")\n  {\n    if(obj.status === \"ACCEPTED\")\n    {\n      return (\n      <div className=\"card\">\n        <CardHeader obj={obj}/>\n        {(obj.requestReceiver === props.userKey && obj.type === \"pay\") || (obj.requestSender === props.userKey && obj.type === \"getPaid\") ? <button className=\"btn btn-outline-success\" onClick={() => handleRequest(props.data, \"mark\")}> Mark As Completed </button> : undefined}\n      </div>\n      );\n    }\n  }\n\n  if(props.type === \"PENDING_SENT\")\n    if(obj.requestSender === props.userKey && obj.status === \"PENDING\")\n      return (\n        <div className=\"card\">\n          <CardHeader obj={obj}/>          \n        </div>\n      );\n  if(props.type === \"PENDING_RECEIVED\")\n    if(obj.requestReceiver === props.userKey && obj.status === \"PENDING\")\n      return (\n        <div className=\"card\">\n          <CardHeader obj={obj}/>\n          <button className=\"btn btn-outline-success\" onClick={() => handleRequest(props.data, \"accept\")}> Accept </button>\n          <button className=\"btn btn-outline-danger\" onClick={() => handleRequest(props.data, \"decline\")} > Decline </button>\n        </div>\n      );\n\n  if(props.type === \"COMPLETED\")\n    if(obj.status === \"COMPLETED\")\n      return (\n        <div className=\"card\">\n          <CardHeader obj={obj}/>          \n        </div>\n      );\n\n\n  return null;\n}\n\nexport default RequestCard","import React from \"react\";\nimport {connect} from \"react-redux\"\nimport {firebaseDB} from \"../firebase\"\nimport {correctEmail} from \"../helpers\"\nimport RequestCard from \"./RequestCard\"\n\nclass RequestsList extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      requestsReceived : [],\n      requestsSent : [],\n      mode : \"PENDING_RECIEVED\",\n      title : \"Pending You Received\",\n    }\n  }\n\ncomponentDidMount() {\n\n  // remeber to add index on requestReceiver\n  firebaseDB.ref(\"transactionRequests\").orderByChild(\"requestReceiver\").equalTo(correctEmail(this.props.email)).on(\"value\", (snap) => {\n    let arr = []\n    snap.forEach(item => {\n      arr.push(item)\n      return false\n    })\n    this.setState(pState => { return {...pState, requestsReceived : [...arr]} })\n  })\n\n  firebaseDB.ref(\"transactionRequests\").orderByChild(\"requestSender\").equalTo(correctEmail(this.props.email)).on(\"value\", (snap) => {\n    let arr = []\n    snap.forEach(item => {\n      arr.push(item)\n      return false\n    })\n    this.setState(pState => { return {...pState, requestsSent : [...arr]} })\n  })\n\n}\n\ncomponentWillUnmount() {\n  firebaseDB.ref(\"transactionRequests\").off();\n\n}\n\n  handleClick = (e) => {\n    this.setState({mode : e.target.id, title : e.target.innerText});\n  }\n\n\n  render() {\n    if(this.props.authenticated)\n    {\n      return(\n        <div className=\"container\">\n          <h3>Transaction Requests</h3>\n          <div className=\"row\">\n\n              <div className=\"col-md\">\n                <button className=\"btn btn-outline-success\" id=\"PENDING_RECEIVED\" onClick={this.handleClick} >Pending You Received</button>\n              </div>  \n\n              <div className=\"col-md\">\n                <button className=\"btn btn-outline-success\" id=\"COMPLETED\" onClick={this.handleClick} >Completed Requests</button>\n              </div>  \n\n\n              <div className=\"col-md\">\n                <button className=\"btn btn-outline-success\" id=\"ACCEPTED\" onClick={this.handleClick} >Accepted Requests</button>\n              </div>  \n\n              <div className=\"col-md\">\n                <button className=\"btn btn-outline-success\" id=\"REJECTED\" onClick={this.handleClick} >Rejected Requests</button>\n              </div>  \n\n              <div className=\"col-md\">\n                <button className=\"btn btn-outline-success\" id=\"PENDING_SENT\" onClick={this.handleClick} >Pending You Sent</button>\n              </div>  \n          </div>\n          <hr /> \n          <br />\n          <h2>{this.state.title}</h2>\n            <ul className=\"list-unstyled\" id=\"REQUEST_LIST\">\n              {[...this.state.requestsReceived, ...this.state.requestsSent].map(i => {\n                return(<li> <RequestCard data={i} type={this.state.mode} userKey={correctEmail(this.props.email)}/> </li> )\n                })}\n            </ul>\n          <h6>x-- End Of The List --x</h6>\n\n        </div>\n      )\n    }\n\n    else\n    {\n      return(\n        <div className=\"container\">\n          <h1>You May Wanna Login First</h1>\n        </div>\n      ) \n    }\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authenticated : state.NavbarReducer.authenticated,\n    userName : state.NavbarReducer.userName,\n    email : state.NavbarReducer.email\n  };\n}\n\nexport default connect(mapStateToProps, null) (RequestsList);","import React from \"react\";\nimport {connect} from \"react-redux\"\nimport SearchUsers from \"./SearchUsers\"; \nimport RequestsList from \"./RequestList\"\nimport {Link} from \"react-router-dom\";\n\nclass Dashboard extends React.Component {\n  constructor (props) {\n    super(props)\n  }\n\n  render() {\n    if(this.props.authenticated)\n    {\n      return(\n        <div className=\"container\">\n          <h1>Dashboard</h1>\n          <hr />\n          <Link to=\"/contacts\" className=\"btn btn-outline-success\">Recently Contacted</Link>\n          <SearchUsers />\n          <hr />\n          <RequestsList />\n        </div>\n      )\n    }\n\n    else\n    {\n      return(\n        <div className=\"container\">\n          <h1>You May Wanna Login First</h1>\n        </div>\n      ) \n    }\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authenticated : state.NavbarReducer.authenticated,\n    userName : state.NavbarReducer.userName,\n    email : state.NavbarReducer.email\n  };\n}\n\nexport default connect(mapStateToProps, null) (Dashboard);","const TransactionSchema = (from, to, payload) => {\n  return {\n    requestSender : from,\n    requestReceiver : to,\n    status : \"PENDING\",\n    senderName : payload.senderName,\n    receiverName : payload.receiverName,\n    desc : payload.desc,\n    amount : payload.amount,\n    type : payload.type\n  }\n};\n\nexport default TransactionSchema;","import React from \"react\"\nimport {connect} from \"react-redux\"\nimport TransactionSchema from \"../Schema/TransactionSchema\"\nimport {transact} from \"../helpers\"\nimport {TransactionRequestAction} from \"./actions\"\n\nclass TransactionView extends React.Component {\n  constructor(props) {\n    super(props)\n    \n    this.state = {\n      paymentType : \"pay\",\n      amount : 0,\n      desc : \"\"\n    }\n  }\n\n  handleChange = (event) => {\n    event.preventDefault()\n    let prop = event.target.id\n    let val = event.target.value\n    let obj = {}\n    if(prop === \"amount\")\n    {\n      val = (isNaN(val) || val < 0) ? 0 : val\n      val = Number(val) \n    }\n    obj[prop] = val\n    this.setState(obj);\n  }\n\n  handleTransaction = () => {\n    let payload = {desc : this.state.desc, amount : this.state.amount, type : this.state.paymentType, senderName : this.props.senderName, receiverName : this.props.receiverName}\n    let transcation = TransactionSchema(this.props.from, this.props.to, payload);\n    transact(transcation);  \n    this.props.TransactionRequest()  \n  }\n\n  render() {\n    return(\n      <div>\n        <br />\n        <form>\n          <label for=\"paymentType\">Payment Type </label>\n          <select className=\"form-control\" id=\"paymentType\" value={this.state.paymentType} onChange={this.handleChange}>\n            <option value=\"pay\">I Got To Pay You</option>\n            <option value=\"getPaid\">You Got To Pay Me</option>\n          </select>\n          <br />\n          <label for=\"amount\">Amount</label>\n          <input type=\"text\" className=\"form-control\" id=\"amount\" value={this.state.amount} onChange={this.handleChange}></input>\n          <br />\n          <lable for=\"desc\">Description</lable>\n          <textarea className=\"form-control\" id=\"desc\" value={this.state.desc} onChange={this.handleChange}></textarea>\n          <br />\n        </form>\n\n          <button className=\"btn btn-outline-success\" id=\"done\" onClick={this.handleTransaction}> Done </button>\n      </div>  \n    )\n  }\n\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    TransactionRequest : () => {\n      dispatch(TransactionRequestAction());\n    }\n\n  }\n}\n\n\n\nexport default connect(null, mapDispatchToProps) (TransactionView);","const TransactionRequestAction = () => {\n  return {\n    type : \"Transaction_Request\"\n  }\n}\n\nconst ToggleLogAction = () => {\n  return {\n    type : \"Toggle_Log\"\n  }\n} \n\nexport {\n  TransactionRequestAction,\n  ToggleLogAction\n}","import React from \"react\";\nimport {connect} from \"react-redux\"\nimport {verifyUser, correctEmail} from \"../helpers\"\nimport TransactionView from \"./TransactionView\";\nimport {ToggleLogAction} from \"./actions\"\nimport {firebaseDB} from \"../firebase\"\n\nclass PublicProfile extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      foreignUser : undefined,\n    }\n  }\n\n  componentDidMount() {\n    (async () => {\n      let testUser = undefined\n      if(this.props.userKey)\n        testUser = await verifyUser(this.props.userKey);\n      if(testUser && testUser.exists())\n      {\n        this.setState({foreignUser : testUser.val()})\n      }\n      else\n      {\n        this.setState({foreignUser : undefined})\n      }\n    })()\n\n  }\n\n  \n  render() {\n    if(this.props.authenticated)\n    {\n      if(this.state.foreignUser) \n      {\n        firebaseDB.ref(`users/${correctEmail(this.props.email)}/preferences/contacts/${this.props.userKey}`).set(this.state.foreignUser)\n        return (\n          <div>\n            <h2> Welcome To The Profile Of {this.state.foreignUser} </h2>\n            \n\n            <button className=\"btn btn-outline-success\" onClick={this.props.ToggleLog}> {this.props.logPayment ? \"Done For Now\" : \"Log A Payment\"   } </button>\n\n            {this.props.logPayment ? <TransactionView from={correctEmail(this.props.email)} to={this.props.userKey} receiverName={this.state.foreignUser} senderName={this.props.userName} /> : undefined}\n\n          </div>\n        )\n      }\n      else\n      {\n        return (\n          <h1>Looking For This User ...</h1>\n        )\n      }\n    }\n\n    else\n    {\n      return(\n        <div className=\"container\">\n          <h1>You May Wanna Login First</h1>\n        </div>\n      ) \n    }\n  }\n\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    ToggleLog : () => {\n      dispatch(ToggleLogAction());\n    }\n\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authenticated : state.NavbarReducer.authenticated,\n    userName : state.NavbarReducer.userName,\n    email : state.NavbarReducer.email,\n    logPayment : state.HomeReducer.logPayment\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (PublicProfile);","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {correctEmail} from \"../helpers\";\nimport Dashboard from \"./Dashboard\";\nimport PublicProfile from \"./PublicProfile\"\nclass Home extends React.Component {\n  \n  constructor(props) {\n    super(props)\n  }\n\n\n\n  render() {\n    if(this.props.authenticated )\n    {\n      if(this.props.email && this.props.match.params.id === correctEmail(this.props.email))\n      { return (\n          <Dashboard />\n        )\n      }\n\n      else\n      {\n        return (\n          <PublicProfile userKey={this.props.match.params.id}/>\n        )\n      }\n    }\n\n    else\n    {\n      return (\n        <div className=\"container\">\n          <h2>You Got To Login First .. To Start Using The App</h2>\n        </div>\n\n      )\n    }\n\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authenticated : state.NavbarReducer.authenticated,\n    userName : state.NavbarReducer.userName,\n    email : state.NavbarReducer.email\n  };\n}\n\nexport default connect(mapStateToProps, null) (Home);","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport {correctEmail} from \"../helpers\";\n\nconst Welcome = (props) => {\n  return (\n    <div className=\"container\">\n      <h1>Welcome To The Balance App</h1>\n      <p>This app is basically a balance manger. You can send requests to your friends for the amount they owe you and all that stuff</p>\n      <footer>Created With &hearts; By thegitone23</footer>\n      {props.authenticated ? <Redirect to={\"/user/\"+correctEmail(props.email)} /> : undefined}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    authenticated : state.NavbarReducer.authenticated,\n    userName : state.NavbarReducer.userName,\n    email : state.NavbarReducer.email\n  };\n}\n\n\nexport default connect(mapStateToProps,null)(Welcome);","import React from \"react\"\nimport {Link} from \"react-router-dom\"\nconst ContactTile = (props) => {\n  if(props.userKey) \n  {\n    \n    return (\n    <div className=\"card\">\n      <li className=\"tile\">\n      <Link to={`/user/${props.userKey}`}>\n        <h1>{props.userName}</h1>\n        <h2>{props.userKey}</h2>\n      </Link>\n      </li>\n    </div>\n    );\n  }\n  return undefined;\n};\n\nexport default ContactTile;","import React from \"react\";\nimport {connect} from \"react-redux\"\nimport {firebaseDB} from \"../firebase\"\nimport {correctEmail} from \"../helpers\"\nimport ContactTile from \"./ContactTile\"\n\nclass Contacts extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      contacted : {}\n    }\n\n  }\n  componentDidMount() {\n    if(this.props.authenticated) {\n      firebaseDB.ref(`users/${correctEmail(this.props.email)}/preferences/contacts`).once(\"value\", (snap) => {\n        if(snap.exists())\n        {\n          this.setState({contacted : snap.val()});\n        }\n      })\n\n    }\n  }\n\n  render() {\n    if(this.props.authenticated)\n    {  \n      let userKeys = [];\n      let userNames = [];\n      for(let key in this.state.contacted) {\n        userKeys.push(key)\n        userNames.push(this.state.contacted[key])\n      }      \n      return(\n        <div className = \"container\">\n          <ul className=\"list-unstyled\">\n            {userKeys.map((val, idx) => {\n\n              return <ContactTile userKey={val} userName={userNames[idx]} />})\n            }  \n          </ul>\n          <h6>x-- End Of The List --x</h6>\n\n        </div>\n      )\n    }\n\n    else\n    {\n      return(\n        <div className=\"container\">\n          <h1>You May Wanna Login First</h1>\n        </div>\n      ) \n    }\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authenticated : state.NavbarReducer.authenticated,\n    userName : state.NavbarReducer.userName,\n    email : state.NavbarReducer.email\n  };\n}\n\nexport default connect(mapStateToProps, null) (Contacts);","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider} from 'react-redux';\nimport {createStore} from \"redux\";\nimport reducer from \"./rootReducer\";\n\n\nimport \"./firebase\";\n\nimport \"./static/bootstrap.css\"\nimport \"./static/style.css\"\n\nimport Navbar from \"./Nav\";\nimport Home from \"./Home\";\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Welcome from './Welcome';\nimport Contacts from \"./Contacts\";\n\nconst store = createStore(reducer);\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n    <div className=\"container text-center\">\n      <Navbar />\n      <Switch>\n        <Route path=\"/\" component={Welcome} exact />\n        <Route path=\"/contacts\" component={Contacts} exact/>\n        <Route path=\"/user/:id\" component={Home} />\n      </Switch>\n    </div>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}